import { WagaHandler, WagaHandlerCallback, ValidMethods } from '../types';
declare type methodRouter = Router | WagaHandlerCallback;
declare class Router {
    #private;
    get _methods(): Record<ValidMethods, WagaHandler[]>;
    __active__(): Record<ValidMethods, WagaHandler[]>;
    _setMethod(method: ValidMethods, path: string, handlerCallback: WagaHandlerCallback[]): void;
    get(path: string, ...handlerCallback: WagaHandlerCallback[]): this;
    post(path: string, ...handlerCallback: WagaHandlerCallback[]): this;
    put(path: string, ...handlerCallback: WagaHandlerCallback[]): this;
    delete(path: string, ...handlerCallback: WagaHandlerCallback[]): this;
    use(...handlerCallback: methodRouter[]): this;
    use(path: string, ...handlerCallback: methodRouter[]): this;
}
export = Router;
